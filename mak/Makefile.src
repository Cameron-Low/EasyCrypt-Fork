SRC_DIR=$(TOOLDIR)/src
SRCDIR=$(TOOLDIR)/src
NAME=easycrypt
TOP=$(NAME).top

print: 
	@echo " PACKAGE" $(PACKAGE) "\n" \
  "VERSION" $(VERSION) "\n" \
  "OCAMLFIND" $(OCAMLFIND) "\n"\
  "OCAMLMKTOP" $(OCAMLMKTOP) "\n"\
  "OCAMLDOC"   $(OCAMLDOC) "\n"\
  "OCAMLLEX"  $(OCAMLLEX) "\n"\
  "OCAMLDEP"  $(OCAMLDEP) "\n"\
  "OCAMLBEST"  $(OCAMLBEST) "\n"\
  "enable_emacs" $(enable_emacs) "\n" \
  "OCAMLGRAPHLIB" $(OCAMLGRAPHLIB) "\n" \
  "WHY3LIB" $(WHY3LIB) "\n" \
  "MENHIR" $(MENHIR) "\n" \
  "MENHIRLIBS" $(MENHIRLIBS) "\n"




EXE=./$(TOP)

.PHONY: src 

src: $(TOP)
	@echo "****************************************************************"
	@echo " Finished."
	@echo "****************************************************************"

PACK_SRC=ecUtil uID ecWhy3 ecTerm ppAst ecParser ecLexer unification \
	fol ppLogic ppLatex global \
	whyRun whyCmds funLogic ecTyping \
	ecInline ecDerandom ecWp ecSwap ecEager ecDeriv ecProba \
	ecStrategy ecCommand apiUtil api

PACK_ML=$(PACK_SRC:%=$(SRCDIR)/%.ml)
PACK_HEAD=apiTypes ast astYacc astLogic
PACK_CMI=$(PACK_HEAD:%=$(SRCDIR)/%.cmi)
PACK_CMOS=$(PACK_ML:%.ml=%.cmo)
PACK_SIG=$(SRCDIR)/ec.cmi


SRC_LIBS= unix.cma str.cma nums.cma dynlink.cma graph.cma why3.cma

TOP_CMOS= $(SRCDIR)/ec.cmo $(SRCDIR)/ecMain.cmo

ALL_ML=$(PACK_ML) $(SRCDIR)/ecMain.ml 

MLI=$(PACK_HEAD:%=%.mli) $(SRCDIR)/ec.mli

GENERATED= $(SRCDIR)/ecLexer.ml $(SRCDIR)/ecParser.ml $(SRCDIR)/ecParser.mli


$(SRCDIR)/ec.cmo : $(PACK_CMOS) $(PACK_SIG) $(PACK_CMI)
	$(OCAMLC) $(OCAMLFLAGS) -pack -o $@ $(PACK_CMI) $(PACK_CMOS)
 

GENERATED+= $(SRCDIR)/ec.mli $(SRCDIR)/ec.cmi $(SRCDIR)/ec.cmo 
 
$(SRCDIR)/ec.mli : $(SRCDIR)/api.cmo
	@echo "Generating " $@ "..."
	@echo "(* Generated file: do not modify! *)" > $@
	@echo "module ApiTypes : sig" >> $@
	@cat $(SRCDIR)/apiTypes.mli  >> $@
	@echo "end" >> $@
	@echo "module Api : sig" >> $@
	$(OCAMLC) $(OCAMLFLAGS) -i -c $(SRCDIR)/api.ml >> $@
	@echo "end" >> $@

$(TOP) : $(TOP_CMOS)
	$(OCAMLMKTOP) -g -o $@ -I $(OCAMLGRAPHLIB) -I $(WHY3LIB) $(SRC_LIBS) $(TOP_CMOS)


depend_src: 
	rm -f $(SRCDIR)/.depend
	$(MAKE) $(SRCDIR)/.depend

DPD_FILES =  $(ALL_ML) \
	     $(filter-out $(SRCDIR)/ec.mli, $(wildcard $(SRCDIR)/*.mli))

$(SRCDIR)/.depend : $(DPD_FILES) Makefile
	@ocamldep -I $(SRCDIR) $(DPD_FILES) > $@

-include $(SRCDIR)/.depend

#=== CLEAN :

.PHONY: clean_src

dist_src : clean_src
	@mkdir -p $(DIST_DIR)
	@cp -R src $(DIST_DIR)/src

clean_src : 
	rm -f $(GENERATED) 
	rm -f $(PACK_CMXS) $(PACK_CMI)
	rm -f $(SRC_DIR)/*.cmo
	rm -f $(SRC_DIR)/*.cmi
	rm -f $(SRC_DIR)/*.annot
	rm -f $(TOP)

#rm -f $(wildcard $(SRCDIR)/*.cmi)
#rm -f $(ALL_ML:%.ml=%.cmo)
#rm -f $(ALL_ML:%.ml=%.annot)
#rm -f $(ALL_ML:%.ml=%.o)
#rm -f $(ALL_ML:%.ml=%.ml-e)

